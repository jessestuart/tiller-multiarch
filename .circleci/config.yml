version: 2

build_jobs: &build_jobs
  jobs:
    - build-amd64
    - build-arm64
    - build-armhf
    - push-manifest:
        requires:
          - build-amd64
          - build-arm64
          - build-armhf
    - semantic_release:
        requires:
          - push-manifest

workflows:
  version: 2
  commit:
    <<: *build_jobs
  nightly:
    <<: *build_jobs
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master

semantic_release: &semantic_release
  working_directory: /root/tiller
  docker:
    - image: node:12
  steps:
    - checkout
    - restore_cache:
        keys:
          - v1-node-{{ checksum 'yarn.lock' }}
          - v1-node-
    - run: yarn -s --frozen-lockfile --no-progress
    - run: yarn semantic-release

shared: &shared
  working_directory: /root/tiller
  docker:
    - image: docker:stable-git
  steps:
    - checkout
    - setup_remote_docker

    - run:
        name: Install build dependencies.
        command: apk add --upgrade --no-cache bash curl jq make

    - run:
        # Unforunately, there's no easy way to "merge" anchors/references
        # according to the # YAML 1.2 spec. So, the recommended way to handle
        # this is to dump your # values into a file and source it at build time.
        # @see e.g., https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables
        name: Set up shared environment vars.
        command: sh scripts/load_env.sh

    - run:
        name: Update Go version.
        environment:
          GOROOT: /usr/local/go/
        command: |
          source "$BASH_ENV"
          sh scripts/install_go.sh

    - run:
        name: Install glide.
        command: sh scripts/install_glide.sh

    - run:
        name: Clone repo.
        command: |
          source $BASH_ENV
          mkdir -p "$PROJECT_PATH"
          git clone "https://github.com/${GITHUB_REPO}" --depth=1 "$PROJECT_PATH"

    - restore_cache:
        keys:
          - glide-{{ checksum "/root/go/src/k8s.io/helm/glide.yaml" }}-{{ checksum "/root/go/src/k8s.io/helm/glide.lock" }}-{{ .Revision }}
          - glide-{{ checksum "/root/go/src/k8s.io/helm/glide.yaml" }}-{{ checksum "/root/go/src/k8s.io/helm/glide.lock" }}
          - glide-

    - run:
        name: Bootstrap repo dependencies.
        command: |
          source $BASH_ENV
          cd "$PROJECT_PATH" && make bootstrap

    - save_cache:
        key: glide-{{ checksum "/root/go/src/k8s.io/helm/glide.yaml" }}-{{ checksum "/root/go/src/k8s.io/helm/glide.lock" }}-{{ .Revision }}
        paths:
          - ~/.glide
          - ~/go/bin

    - run:
        name: Compile architecture-specific tiller binary.
        command: |
          source "$BASH_ENV"
          sh scripts/build_binary.sh

    - run:
        name: Build and push Docker image.
        command: |
          source "$BASH_ENV"
          sh scripts/push-multiarch.sh

jobs:
  build-amd64:
    <<: *shared
    environment:
      _GOARCH: amd64
      TARGET: amd64
  build-arm64:
    <<: *shared
    environment:
      _GOARCH: arm64
      TARGET: arm64v8
  build-armhf:
    <<: *shared
    environment:
      _GOARCH: arm
      TARGET: arm32v6

  push-manifest:
    docker:
      - image: docker:stable-git
    environment:
      GITHUB_REPO: helm/helm
      IMAGE: tiller
      REGISTRY: jessestuart
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Push Docker manifest.
          command: |
            apk add --upgrade --no-cache bash curl jq
            sh -c scripts/load_env.sh
            sh -c scripts/push-manifest.sh

  semantic_release: *semantic_release
